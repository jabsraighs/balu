# The name of this app. Must be unique within a project.
name: app

dependencies:
    nodejs:
        yarn: "*"
    php:
        composer/composer: '^2.0'

# The type of the application to build.
type: php:8.1
build:

    flavor: "none"

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: 'dbpostgres:admin'
    rediscache: 'rediscache:redis'


variables:
    php:

        memory_limit: 512M
        opcache.memory_consumption: 256
        opcache.max_accelerated_files: 20000
        realpath_cache_size: 4096K
        realpath_cache_ttl: 600
        session.save_handler: redis
        session.save_path: "tcp://redissession.internal:6379"
        session.name: eZSESSID

#     env:

#         APP_HTTP_CACHE: 
#         TRUSTED_PROXIES: 
#         APP_ENV: prod
#         CACHE_DSN: rediscache:6379

# The configuration of app when it is exposed to the web.
web:
    locations:
        "/":
            root: "public"
            passthru: "/index.php"
            expires: 600
            allow: false
            rules:
                '^/var/.*(?i)\.(php3?|phar|phtml|sh|exe|pl|bin)$':
                    allow: false
                '^/var/([^/]+/)?storage/images(-versioned)?/.*' :
                    allow: true
                '^/bundles/':
                    allow: true
                '^/assets/':
                    allow: true
                '^/build/':
                    allow: true
                

# The size of the persistent disk of the application (in MB).
disk: 1024

# The mounts that will be performed when the package is deployed.
mounts:
    "var/log":
        source: local
        source_path: var
    "/var": { source: local, source_path: var }
hooks:

    build: |
    set -e
         unset NPM_CONFIG_PREFIX
          curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | dash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm current
          nvm install 16.14.2
          composer install --no-dev --prefer-dist --no-progress --no-interaction --optimize-autoloader
          curl -fsS https://platform.sh/cli/installer | php

    deploy: |
        set -e
        echo "START $PLATFORM_TREE_ID `date`"
        rm -Rf var/cache/*
        unset NPM_CONFIG_PREFIX
        command -v nvm && nvm use 10.15.3
        php bin/console cache:clear --env=prod
        php bin/console doctrine:schema:update --force
        php bin/console ibexa:graphql:generate-schema
        echo "END $PLATFORM_TREE_ID `date`"

# The configuration of scheduled execution.
# see https://docs.platform.sh/configuration/app/cron.html#cron-jobs
#
# Tip: Crons work like on traditional dedicated servers, they share resources with web, so:
# - For long runing heavy operations, consider using background "workers" with event queuing.
# - To disable certain features during a cronjob, you can usually do it with env variable or php variable, example: "php -d newrelic.enabled=false bin/console my:import"
crons:
    frequent:

        spec: "* * * * *"
        cmd: "php bin/console app:auto"

workers:
    messenger:
        disk: 1024
        commands:
            start: php bin/console --time-limit=3600 --memory-limit=64M messenger:consume async

runtime:
    extensions:
        - xsl
        - imagick
        - readline
        - redis
        - igbinary
        - sodium