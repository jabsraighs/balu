security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_admin_provider:
            entity:
                class: App\Entity\Admin
                property: 'y'  # Replace with the actual property used for admin usernames

        app_user_provider:
            entity:
                class: App\Entity\User
                property: 'email'  # Replace with the actual property used for user usernames

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        user:
            lazy: true
            provider: app_user_provider
            custom_authenticator:
                - App\Login\UserAuthenticator
            entry_point: App\Login\UserAuthenticator
            logout:
                path: app_logout
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /user
                always_remember_me: true

        admin:
            lazy: true
            provider: app_admin_provider
            custom_authenticator:
                - App\Security\AdminAuthenticator
            entry_point: App\Security\AdminAuthenticator
            logout:
                path: app_logout_admin
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /admin
                always_remember_me: false

      

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/user, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon